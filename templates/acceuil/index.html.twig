{% extends "template.html.twig" %}
{% block title %}Statistiques par Département
{% endblock title %}
{% block body %}
	<h3 style="text-align:center;">Tableau de bord de l'etat des visites pour cette année</h3>
	<div class="row">
		<div class="col-xl-6 col-md-6 mb-4">
			<div class="card border-left-primary shadow h-100 py-2">
				<div class="card-body">
					<div class="row no-gutters align-items-center">
						<div class="col mr-2">
							<div class="text-xs font-weight-bold text-primary text-uppercase mb-1" style="font-weight:bold">
								Total visites</div>
							<div class="h5 mb-0 font-weight-bold text-gray-800">{{totalVisits}}</div>
						</div>
						<div class="col-auto">
							<i class="fas fa-calendar fa-2x text-gray-300"></i>
						</div>
					</div>
				</div>
			</div>
		</div>
		<!-- Earnings (Monthly) Card Example -->
		<div class="col-xl-6 col-md-6 mb-4">
			<div class="card border-left-success shadow h-100 py-2">
				<div class="card-body">
					<div class="row no-gutters align-items-center">
						<div class="col mr-2">
							<div class="text-xs font-weight-bold text-success text-uppercase mb-1" style="font-weight:bold">
								Total visiteurs externes</div>
							<div class="h5 mb-0 font-weight-bold text-gray-800">{{totalVisiteurs}}</div>
						</div>
						<div class="col-auto">
							<i class="fa-solid fa-people-group fa-2x text-gray-300"></i>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Earnings (Monthly) Card Example -->
		{# <div class="col-xl-3 col-md-6 mb-4">
			<div class="card border-left-info shadow h-100 py-2">
				<div class="card-body">
					<div class="row no-gutters align-items-center">
						<div class="col mr-2">
							<div class="text-xs font-weight-bold text-info text-uppercase mb-1" style="font-weight:bold">Visites acceptées
							</div>
							<div class="row no-gutters align-items-center">
								<div class="col-auto">
									<div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">{{totalAcceptedVisits}}</div>
								</div>

							</div>
						</div>
						<div class="col-auto">
							<i class="fa-solid fa-thumbs-up fa-2x text-gray-300"></i>
						</div>
					</div>
				</div>
			</div>
		</div>
		<!-- Pending Requests Card Example -->
		<div class="col-xl-3 col-md-6 mb-4">
			<div class="card border-left-warning shadow h-100 py-2">
				<div class="card-body">
					<div class="row no-gutters align-items-center">
						<div class="col mr-2">
							<div class="text-xs font-weight-bold text-warning text-uppercase mb-1" style="font-weight:bold">
								Visites refusées</div>
							<div class="h5 mb-0 font-weight-bold text-gray-800">{{totalRefusedVisits}}</div>
						</div>
						<div class="col-auto">
							<i class="fa-solid fa-x fa-2x text-gray-300"></i>
							{# <i class="fa-sharp fa-solid fa-recycle fa-2x text-gray-300"></i> 
						</div>
					</div>
				</div>
			</div>
		</div> #}
	</div>
	<div style="display:flex;justify-content:center;align-items:center">
		<div style="width: 50%;height: 350px;">
			<canvas id="departmentVisitsChart"></canvas>
		</div>
		<div class="chart-container" style="width: 50%;height: 400px;">
			<canvas id="statistiquesChart"></canvas>
		</div>
	</div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
	const data = {
labels: [{% for department, count in statisticsByDepartment %}'{{ department }}',{% endfor %}],
datasets: [
{
label: 'Nombre de Visites',
data: [{% for department, count in statisticsByDepartment %}{{ count }},{% endfor %}],
backgroundColor: [
'rgba(75, 192, 192, 0.6)', 'orange', 'violet', 'yellow',
],
borderColor: 'white',
borderWidth: 2
}
]
};

const config = {
type: 'pie',
data: data,
options: {
responsive: true,
scales: {
y: {
beginAtZero: true
}
}
}
};

const departmentVisitsChart = new Chart(document.getElementById('departmentVisitsChart'), config);
</script>{# <div class="chart-container" style="width: 700px;height: 400px;">
																							<canvas id="employeeChart"></canvas>
																						</div> #}<script>
	const employeeChart = document.getElementById('employeeChart').getContext('2d');
new Chart(employeeChart, {
type: 'pie',
data: {
labels: {{ employeeNames | raw }},
datasets: [
{
label: 'Nombre total de visites',
data: {{ visitCounts | raw }},
backgroundColor: [
'rgba(75, 192, 192, 0.6)',
'rgb(54, 162, 235)',
'rgb(255, 205, 86)',
'#ace1af',
'violet',
'#89cff0'
],
borderColor: 'rgba(75, 192, 192, 1)',
borderWidth: 1
}
]
},
options: {
scales: {
y: {
beginAtZero: true
}
}
}
});
</script>
<script>
	const ctx = document.getElementById('statistiquesChart').getContext('2d');
const statistiques = {{ statistiques|json_encode|raw }};

new Chart(ctx, {
type: 'bar',
data: {
labels: Object.keys(statistiques),
datasets: [
{
label: 'Nombre de Visites',
data: Object.values(statistiques),
backgroundColor: [
'rgba(255, 99, 132, 0.6)',
'rgba(255, 159, 64, 0.6)',
'rgba(255, 205, 86, 0.6)',
'rgba(75, 192, 192, 0.6)',
'rgba(54, 162, 235, 0.6)',
'rgba(153, 102, 255, 0.6)',
'rgba(201, 203, 207, 0.6)',
'rgb(255, 99, 132)',
'rgb(255, 159, 64)',
'rgb(255, 205, 86)',
'rgb(75, 192, 192)',
'rgb(54, 162, 235)',
'rgb(255, 99, 132)',
],
borderColor: 'rgba(75, 192, 192, 1)',
borderWidth: 1
}
]
},
options: {
scales: {
y: {
beginAtZero: true
}
}
}
});
</script>{% endblock %}
